DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER (
  ID   VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  PRIMARY KEY (ID)
);

INSERT INTO CUSTOMER
(ID, NAME) VALUES
  ('customer1', 'John'),
  ('customer2', 'Mary');

DROP TABLE IF EXISTS ACCOUNT;
CREATE TABLE ACCOUNT (
  CUSTOMER_ID VARCHAR(255) NOT NULL,
  NAME        VARCHAR(3)   NOT NULL,
  BALANCE     VARCHAR(255) NOT NULL,
  CURRENCY    VARCHAR(3)   NOT NULL,
  LAST_UPDATE TIMESTAMP    NOT NULL,
  PRIMARY KEY (CUSTOMER_ID, NAME)
);

INSERT INTO ACCOUNT (CUSTOMER_ID, NAME, BALANCE, CURRENCY, LAST_UPDATE) VALUES
  ('customer1', 'EUR', '10', 'EUR', '2017-12-31T10:49:34.873Z'),
  ('customer1', 'GBP', '1', 'GBP', '2017-12-13T09:40:34.873Z'),
  ('customer2', 'CHF', '3', 'CHF', '2017-12-25T11:31:34.873Z');


DROP TABLE IF EXISTS EXCHANGE_RATE;
CREATE TABLE EXCHANGE_RATE (
  KEY   VARCHAR(255) NOT NULL,
  VALUE VARCHAR(255) NOT NULL,
  PRIMARY KEY (KEY)
);

INSERT INTO EXCHANGE_RATE (KEY, VALUE) VALUES
  ('EUR-GBP', '0.89'),
  ('GBP-EUR', '1.13');

DROP TABLE IF EXISTS TRANSFER;
CREATE TABLE TRANSFER (
  ID            VARCHAR(255) AUTO_INCREMENT,
  CUSTOMER_ID   VARCHAR(255) NOT NULL,
  ACCOUNT_FROM  VARCHAR(3)   NOT NULL,
  ACCOUNT_TO    VARCHAR(3)   NOT NULL,
  AMOUNT        VARCHAR(255) NOT NULL,
  EXCHANGE_RATE VARCHAR(255) NOT NULL,
  NOTE          VARCHAR(255),
  CREATION_DATE TIMESTAMP    NOT NULL,
  PRIMARY KEY (ID)
);
